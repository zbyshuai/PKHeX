using System;
using FluentAssertions;
using Xunit;

namespace PKHeX.Core.Tests.Saves;

public class MemeCryptoTests
{
    [Fact]
    public void TestVerifySaveSignature() => Assert.True(MemeCrypto.VerifyMemeData(SaveSignature, out _));

    [Fact]
    public void TestVerifyMemeBuffer()
    {
        const MemeKeyIndex type = MemeKeyIndex.PokedexAndSaveFile;
        var result = MemeCrypto.VerifyMemeData(Encrypted00FFSigned, out var actual, type);
        result.Should().BeTrue();
        DecryptedAsDexSave.SequenceEqual(actual).Should().BeTrue();
    }

    [Fact]
    public void TestSignMemeBuffer()
    {
        var actual = MemeCrypto.SignMemeData(Decrypted00FF);
        Encrypted00FFSigned.SequenceEqual(actual).Should().BeTrue();
    }

    [Fact]
    public void TestVerifyPoke()
    {
        Assert.True(MemeCrypto.VerifyMemePOKE(Vector2[..^2], out _));
        Assert.True(MemeCrypto.VerifyMemePOKE(Vector2, out _));
    }

    private static void Verify(ReadOnlySpan<byte> span, MemeKeyIndex type)
        => MemeCrypto.VerifyMemeData(span, out _, type).Should().BeTrue();

    // Various payloads that have been signed with Memecrypto Keys
    [Fact] public void VerifyMemeKeyLocalWireless() => Verify(MemeKeyLocalWireless, MemeKeyIndex.LocalWireless);
    [Fact] public void VerifyMemeKeyFriendlyCompetition() => Verify(MemeKeyFriendlyCompetition, MemeKeyIndex.FriendlyCompetition);
    [Fact] public void VerifyMemeKeyLiveCompetition() => Verify(MemeKeyLiveCompetition, MemeKeyIndex.LiveCompetition);
    [Fact] public void VerifyMemeKeyRentalTeam() => Verify(MemeKeyRentalTeam, MemeKeyIndex.RentalTeam);
    [Fact] public void VerifyMemeKeyPokedexAndSaveFile() => Verify(MemeKeyPokedexAndSaveFile, MemeKeyIndex.PokedexAndSaveFile);
    [Fact] public void VerifyMemeKeyGaOle() => Verify(MemeKeyGaOle, MemeKeyIndex.GaOle);
    [Fact] public void VerifyMemeKeyMagearnaEvent() => Verify(MemeKeyMagearnaEvent, MemeKeyIndex.MagearnaEvent);
    [Fact] public void VerifyMemeKeyMoncolleGet() => Verify(MemeKeyMoncolleGet, MemeKeyIndex.MoncolleGet);
    [Fact] public void VerifyMemeKeyIslandScanEventSpecial() => Verify(MemeKeyIslandScan, MemeKeyIndex.IslandScanEventSpecial);
    [Fact] public void VerifyMemeKeyTvTokyoDataBroadcasting() => Verify(MemeKeyTvTokyo, MemeKeyIndex.TvTokyoDataBroadcasting);
    [Fact] public void VerifyMemeKeyCapPikachuEvent() => Verify(MemeKeyCapPikachu, MemeKeyIndex.CapPikachuEvent);

    private static ReadOnlySpan<byte> SaveSignature =>
    [
        0x58, 0xEA, 0x53, 0xA7, 0x13, 0x3F, 0x34, 0xDA, 0x9F, 0x2B, 0xEC, 0x12, 0xF1, 0x56, 0x03, 0x54,
        0xE8, 0xBD, 0xF8, 0xA4, 0x84, 0xAD, 0xE4, 0xE2, 0x95, 0x4D, 0x3C, 0x48, 0x67, 0x31, 0x18, 0xEB,
        0x67, 0xE2, 0xD5, 0x2E, 0xD0, 0x19, 0x6E, 0x54, 0xDC, 0x5D, 0x93, 0x01, 0x3E, 0x9F, 0x3B, 0x00,
        0xC8, 0xA4, 0x3B, 0x55, 0x6A, 0xEE, 0x8C, 0x2F, 0x76, 0x3E, 0xA9, 0xDC, 0x12, 0x59, 0x88, 0xC6,
        0xB5, 0xF2, 0xD3, 0xC7, 0x4C, 0xA2, 0xC5, 0x80, 0x26, 0xBB, 0x02, 0x4B, 0x40, 0x3D, 0x09, 0xBC,
        0x59, 0x50, 0xC5, 0x4C, 0xEB, 0x6F, 0x21, 0xE4, 0x5D, 0x0B, 0x66, 0xB6, 0x87, 0x91, 0xBC, 0xBB,
        0x6D, 0x7E, 0x67, 0xC2, 0xF7, 0xE4, 0xA7, 0xF4, 0xA5, 0x17, 0xFC, 0x50, 0xB4, 0xFE, 0xED, 0x9A,
        0x65, 0xBF, 0x90, 0x1A, 0xBE, 0xB0, 0xFF, 0xAC, 0x44, 0xAE, 0x07, 0x23, 0x7B, 0xE5, 0xDD, 0x2D,
    ];

    private static ReadOnlySpan<byte> Decrypted00FF =>
    [
        0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
        0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F,
        0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F,
        0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,
        0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F,
        0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x5B, 0x5C, 0x5D, 0x5E, 0x5F,
        0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,
        0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7C, 0x7D, 0x7E, 0x7F,
        0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8A, 0x8B, 0x8C, 0x8D, 0x8E, 0x8F,
        0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9A, 0x9B, 0x9C, 0x9D, 0x9E, 0x9F,
        0xA0, 0xA1, 0xA2, 0xA3, 0xA4, 0xA5, 0xA6, 0xA7, 0xA8, 0xA9, 0xAA, 0xAB, 0xAC, 0xAD, 0xAE, 0xAF,
        0xB0, 0xB1, 0xB2, 0xB3, 0xB4, 0xB5, 0xB6, 0xB7, 0xB8, 0xB9, 0xBA, 0xBB, 0xBC, 0xBD, 0xBE, 0xBF,
        0xC0, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7, 0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF,
        0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD7, 0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0xDF,
        0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7, 0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,
        0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7, 0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xFF,
    ];

    private static ReadOnlySpan<byte> Encrypted00FFSigned =>
    [
        0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
        0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F,
        0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F,
        0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,
        0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F,
        0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x5B, 0x5C, 0x5D, 0x5E, 0x5F,
        0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,
        0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7C, 0x7D, 0x7E, 0x7F,
        0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8A, 0x8B, 0x8C, 0x8D, 0x8E, 0x8F,
        0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9A, 0x9B, 0x9C, 0x9D, 0x9E, 0x9F,

        0x41, 0x85, 0xF2, 0x71, 0x3D, 0x5A, 0x8B, 0xCF, 0xFB, 0xFF, 0x47, 0xF8, 0x68, 0x67, 0xDF, 0x68,
        0x03, 0x54, 0x91, 0x3F, 0xEF, 0xEF, 0x08, 0xD0, 0xD0, 0xF1, 0x05, 0x4C, 0xB0, 0x54, 0xB5, 0x08,
        0xE7, 0xDE, 0x3A, 0xA7, 0x89, 0xAC, 0x44, 0x4D, 0x08, 0x7A, 0xB9, 0x41, 0x2C, 0xEE, 0x96, 0x5A,
        0x6D, 0x38, 0xE4, 0x5E, 0xA0, 0x10, 0xC7, 0x7F, 0xF1, 0x74, 0xF8, 0xF8, 0xD9, 0x99, 0x3A, 0xEA,
        0xFB, 0x9C, 0x06, 0x16, 0xE2, 0x87, 0xB7, 0x44, 0x87, 0xE0, 0xFF, 0x3F, 0x18, 0x74, 0x29, 0x1B,
        0x81, 0x70, 0xC7, 0x11, 0x13, 0x97, 0x17, 0x52, 0x71, 0x7F, 0x8D, 0x18, 0x8A, 0x31, 0x9E, 0xA6,
    ];

    private static ReadOnlySpan<byte> DecryptedAsDexSave =>
    [
        0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
        0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F,
        0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F,
        0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,
        0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F,
        0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x5B, 0x5C, 0x5D, 0x5E, 0x5F,
        0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,
        0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7C, 0x7D, 0x7E, 0x7F,
        0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8A, 0x8B, 0x8C, 0x8D, 0x8E, 0x8F,
        0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9A, 0x9B, 0x9C, 0x9D, 0x9E, 0x9F,

        0xA0, 0xA1, 0xA2, 0xA3, 0xA4, 0xA5, 0xA6, 0xA7, 0xA8, 0xA9, 0xAA, 0xAB, 0xAC, 0xAD, 0xAE, 0xAF,
        0xB0, 0xB1, 0xB2, 0xB3, 0xB4, 0xB5, 0xB6, 0xB7, 0xB8, 0xB9, 0xBA, 0xBB, 0xBC, 0xBD, 0xBE, 0xBF,
        0xC0, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7, 0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF,
        0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD7, 0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0xDF,
        0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7, 0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,
        0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7, 0x43, 0x1E, 0x10, 0xEF, 0x76, 0x81, 0x21, 0x7C,
    ];

    private static ReadOnlySpan<byte> Vector2 =>
    [
        0xA9, 0x6E, 0x2D, 0x8D, 0x9B, 0x99, 0xDB, 0xFB, 0x93, 0x49, 0x39, 0xC0, 0x97, 0xE3, 0xAC, 0x10,
        0x1C, 0x7D, 0x48, 0xCE, 0xC5, 0x2F, 0xCA, 0x71, 0x7B, 0x14, 0xB1, 0x98, 0x90, 0x20, 0x85, 0x92,
        0x04, 0x5C, 0x43, 0x00, 0x35, 0xDD, 0x09, 0xA3, 0x14, 0x46, 0x14, 0x2E, 0x9E, 0xA3, 0x3C, 0xF3,
        0xE6, 0xB6, 0xE6, 0x94, 0x84, 0xB6, 0xD2, 0xEE, 0xD5, 0x00, 0xB8, 0x38, 0x90, 0x48, 0x01, 0x34,
        0x91, 0x60, 0x24, 0x03, 0xDB, 0xE7, 0xB8, 0x14, 0xEA, 0x06, 0x96, 0x67, 0xCF, 0xAD, 0xAF, 0xE7,
        0x48, 0x95, 0x21, 0x7D, 0x78, 0x03, 0x7B, 0x4A, 0x45, 0x6F, 0xAB, 0x2C, 0xAF, 0xD7, 0x1E, 0x69,
        0x00, 0x00, 0x50, 0x4F, 0x4B, 0x45, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    ];

    private static ReadOnlySpan<byte> MemeKeyLocalWireless =>
    [
        0x10, 0x10, 0x03, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x70, 0x30, 0x00, 0x51, 0x30,
        0x8B, 0x30, 0x01, 0xFF, 0xD4, 0x30, 0x20, 0xAB, 0x30, 0x10, 0x03, 0xB4, 0x30, 0xFC, 0x30, 0xB9,
        0x08, 0x30, 0xC8, 0x30, 0xD1, 0x00, 0x07, 0xC6, 0x30, 0xA3, 0x82, 0x00, 0x0D, 0x6E, 0x30, 0x0A,
        0x00, 0x5F, 0x00, 0x05, 0x57, 0x00, 0x30, 0x5D, 0x30, 0x46, 0x30, 0x6A, 0x30, 0x00, 0x00, 0x30,
        0x75, 0x30, 0x93, 0x30, 0x44, 0x30, 0x4D, 0x28, 0x30, 0x6B, 0x00, 0x0B, 0x55, 0x00, 0x15, 0x8F,
        0x30, 0x8C, 0x20, 0x30, 0x66, 0x00, 0x25, 0x81, 0x30, 0x5A, 0x30, 0x89, 0xA0, 0x00, 0x27, 0x44,
        0x00, 0x23, 0x44, 0x30, 0x8D, 0x30, 0x61, 0x2A, 0x30, 0x4C, 0x00, 0x27, 0x6E, 0x00, 0x31, 0xDF,
        0x00, 0x01, 0xC3, 0x08, 0x30, 0xAD, 0x30, 0xE5, 0x00, 0x11, 0x0A, 0x00, 0x42, 0xA0, 0x00, 0x49,
        0x73, 0x00, 0x3D, 0x4D, 0x30, 0x5F, 0x30, 0x88, 0x80, 0x00, 0x7B, 0x0A, 0x00, 0x68, 0x30, 0x82,
        0x30, 0x60, 0xC4, 0x00, 0x2F, 0x10, 0x51, 0x6A, 0x30, 0x63, 0x00, 0x4D, 0x42, 0x30, 0x5F, 0x52,
        0x00, 0x53, 0x6D, 0x00, 0x99, 0x00, 0xA6, 0xF0, 0x02, 0xF0, 0x14, 0xF0, 0x26, 0xFF, 0xF0, 0x38,
        0xF0, 0x4A, 0xF0, 0x5C, 0xF0, 0x6E, 0xF0, 0x80, 0xF0, 0x92, 0xF0, 0xA4, 0xF0, 0xB6, 0xFF, 0xF0,
        0xC8, 0xF0, 0xDA, 0xF0, 0xEC, 0xF0, 0xFE, 0xF1, 0x10, 0xF1, 0x22, 0xF1, 0x34, 0xF1, 0x46, 0x00,
        0x00, 0xB5, 0xE4, 0x00, 0x00, 0x46, 0x46, 0xF8, 0x60, 0x00, 0xF1, 0xAB, 0x31, 0xAB, 0x00, 0x30,
        0xD7, 0x30, 0xEC, 0x0E, 0x30, 0xBC, 0x30, 0xF3, 0x02, 0x0F, 0xF1, 0x73, 0xA7, 0x23, 0xC1, 0x62,
        0xC9, 0x70, 0x06, 0x08, 0xC5, 0xDC, 0xAF, 0xAB, 0x89, 0x80, 0x32, 0x38, 0x2A, 0xF1, 0xFA, 0x71,
        0x7B, 0xBC, 0x5D, 0x91, 0xC6, 0x1A, 0xD7, 0xB6, 0xEA, 0x35, 0x62, 0x20, 0x74, 0x2C, 0x2D, 0xD4,
        0x59, 0x57, 0x65, 0xFC, 0xD8, 0x12, 0x3D, 0x1E, 0x10, 0xED, 0x6B, 0x0A, 0x1D, 0xA4, 0x5D, 0x0C,
        0x21, 0x48, 0x03, 0x5A, 0x56, 0x0B, 0xB1, 0xC5, 0xC2, 0x46, 0xFA, 0x7E, 0xB6, 0x4D, 0x72, 0x9F,
        0xC1, 0xDD, 0x8B, 0x61, 0xB4, 0x73, 0x7D, 0xC5, 0x1E, 0x18, 0x4A, 0x97, 0xE4, 0x79, 0x5E, 0x82,
        0xBF, 0xD0, 0x45, 0x74, 0x3E, 0xC2, 0xAE, 0xAE, 0xD2, 0x6E, 0x87,
    ];

    private static ReadOnlySpan<byte> MemeKeyFriendlyCompetition =>
    [
        0x03, 0x00, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0x01, 0x06, 0x06,
        0x04, 0x04, 0x00, 0x32, 0x04, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x98, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x01, 0x07, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x92, 0x02, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x1E, 0x2D, 0x01, 0x00, 0x01, 0x5A, 0x03, 0x00, 0x00, 0x00, 0xBE, 0x07, 0x00, 0x00, 0x00, 0x00,
        0xC2, 0x87, 0x01, 0x00, 0x50, 0x00, 0x6F, 0x00, 0x6B, 0x00, 0xE9, 0x00, 0x6D, 0x00, 0x6F, 0x00,
        0x6E, 0x00, 0x20, 0x00, 0x54, 0x00, 0x72, 0x00, 0x61, 0x00, 0x69, 0x00, 0x6E, 0x00, 0x65, 0x00,
        0x72, 0x00, 0x20, 0x00, 0x4F, 0x00, 0x6E, 0x00, 0x6C, 0x00, 0x69, 0x00, 0x6E, 0x00, 0x65, 0x00,
        0x20, 0x00, 0x43, 0x00, 0x6F, 0x00, 0x6D, 0x00, 0x70, 0x00, 0x65, 0x00, 0x74, 0x00, 0x69, 0x00,
        0x74, 0x00, 0x69, 0x00, 0x6F, 0x00, 0x6E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0x00,
        0x77, 0x00, 0x77, 0x00, 0x2E, 0x00, 0x70, 0x00, 0x6F, 0x00, 0x6B, 0x00, 0x65, 0x00, 0x6D, 0x00,
        0x6F, 0x00, 0x6E, 0x00, 0x2D, 0x00, 0x74, 0x00, 0x72, 0x00, 0x61, 0x00, 0x69, 0x00, 0x7D, 0xC6,
        0x7F, 0x94, 0x5B, 0x27, 0x55, 0x7C, 0x97, 0xD6, 0xC0, 0xB6, 0xD2, 0x0F, 0xF1, 0x1A, 0xFC, 0xE1,
        0x58, 0x0C, 0x5E, 0x9E, 0x80, 0xC7, 0xC3, 0xFB, 0xBA, 0x53, 0xB6, 0x7F, 0x24, 0xD1, 0xA9, 0x1B,
        0xA2, 0xFB, 0x8C, 0xDD, 0x31, 0xF7, 0xFE, 0x29, 0xD8, 0x94, 0xB3, 0x76, 0x4A, 0x45, 0x40, 0x76,
        0x58, 0xBB, 0x9A, 0x6E, 0x6D, 0xC8, 0xB3, 0xF6, 0xA4, 0x5F, 0x77, 0x68, 0x6A, 0xC5, 0x6E, 0xA6,
        0x4C, 0x02, 0x98, 0xD1, 0xB2, 0x2F, 0x3D, 0x38, 0x50, 0xAD, 0xE1, 0x0A, 0xEA, 0x6E, 0x18, 0x5F,
        0xD0, 0xEE, 0xA9, 0x1A, 0xA3, 0x8E, 0x3F, 0x0F, 0x0A, 0xA9, 0xE7, 0xAD, 0xA1, 0x32,
    ];

    private static ReadOnlySpan<byte> MemeKeyLiveCompetition =>
    [
        0x03, 0x00, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x06, 0x06,
        0x03, 0x03, 0x00, 0x32, 0x04, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x98, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x01, 0x07, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x92, 0x02, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x1E, 0x2D, 0x01, 0x00, 0x01, 0x5A, 0x03, 0x00, 0x00, 0x00, 0xBE, 0x07, 0x00, 0x00, 0x00, 0x00,
        0x0B, 0x91, 0x01, 0x00, 0x49, 0x00, 0x72, 0x00, 0x69, 0x00, 0x73, 0x00, 0x20, 0x00, 0x43, 0x00,
        0x6D, 0x00, 0x70, 0x00, 0x65, 0x00, 0x74, 0x00, 0x69, 0x00, 0x74, 0x00, 0x69, 0x00, 0x6F, 0x00,
        0x6E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x00,
        0x72, 0x00, 0x65, 0x00, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x25,
        0xCA, 0x0A, 0x78, 0xE7, 0x91, 0x54, 0xEB, 0xA1, 0x95, 0x50, 0xA0, 0x73, 0x4F, 0x84, 0xA0, 0xC4,
        0x9F, 0x8B, 0x02, 0xE5, 0x1F, 0xA8, 0x31, 0x05, 0x48, 0xFF, 0xF1, 0x4B, 0x73, 0x38, 0x27, 0x61,
        0x88, 0xC1, 0x1C, 0x85, 0xC1, 0x57, 0x01, 0xDA, 0xED, 0x22, 0x80, 0x99, 0xFB, 0xF9, 0x5A, 0x27,
        0x7E, 0x62, 0x49, 0x62, 0x52, 0x08, 0xD8, 0x99, 0x2F, 0xF0, 0x27, 0x38, 0x5D, 0x89, 0x7A, 0xC0,
        0x97, 0xF0, 0x24, 0x0C, 0x93, 0xA7, 0x0E, 0x35, 0xFB, 0x8A, 0xD9, 0x71, 0xDF, 0xE1, 0x48, 0x32,
        0x98, 0x8D, 0xC7, 0x0F, 0x5D, 0x1B, 0xE1, 0x9C, 0x7E, 0xF5, 0xFB, 0xAF, 0xCC, 0x12,
    ];

    private static ReadOnlySpan<byte> MemeKeyRentalTeam =>
    [
        0x03, 0x00, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00, 0xB8, 0xB9, 0xBA, 0xBB, 0xBC, 0xBD, 0xBE, 0xBF,
        0xC0, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7, 0x4E, 0x35, 0xE4, 0x78, 0x3A, 0x7E, 0x9E, 0x16,
        0x1C, 0x91, 0x9C, 0x0E, 0x73, 0x6F, 0x61, 0xB3, 0x17, 0x41, 0xB8, 0xC1, 0x87, 0x3C, 0x5D, 0x06,
        0xD1, 0xD4, 0x08, 0xD9, 0xDA, 0x9F, 0xE2, 0x8D, 0xCB, 0x53, 0x85, 0x15, 0x18, 0xFC, 0xC0, 0x75,
        0x89, 0x15, 0xEE, 0x29, 0x11, 0xB2, 0x19, 0x4B, 0x20, 0x13, 0x1C, 0x2E, 0x87, 0xBC, 0x63, 0xA2,
        0x55, 0xF3, 0xA5, 0x18, 0x77, 0x63, 0xFA, 0xF9, 0x9B, 0x1B, 0x99, 0xD0, 0xE4, 0x46, 0x01, 0x25,
        0xCC, 0xB7, 0xF1, 0xCE, 0x4A, 0x3C, 0xC0, 0xFC, 0x64, 0x46, 0x34, 0x54, 0xDB, 0x25, 0xCC, 0x85,
        0x1E, 0xF9, 0xA3, 0x60, 0xEA, 0x3D, 0x4B, 0xDB, 0x44, 0xB8, 0xDE, 0x96, 0xD1, 0xC9, 0x83, 0x97,
        0x44, 0xA3, 0xBF, 0x7A, 0x27, 0xFD, 0xF4, 0x1A, 0x86, 0x49, 0x16, 0x66, 0xDA, 0xA7, 0xBE, 0xF5,
        0x5E, 0xBF, 0xB9, 0x54, 0xBA, 0x3F, 0xF7, 0x41, 0x65, 0x72, 0x52, 0x49, 0x0B, 0xD1, 0x13, 0x50,
        0xEE, 0xF3, 0x67, 0xDA, 0x0D, 0x22, 0x9E, 0x04, 0xEE, 0x61, 0xDC, 0xA1, 0x22, 0x05, 0x76, 0x01,
        0x4A, 0xC2, 0xE2, 0x42, 0x32, 0x33, 0x7A, 0xB4, 0xE7, 0xAD, 0xEE, 0x92, 0xB5, 0x9C, 0x44, 0xE9,
        0xAB, 0x8D, 0x19, 0xE0, 0xBA, 0x87, 0x54, 0x7A, 0x03, 0x51, 0xC4, 0x08, 0x8E, 0xDF, 0x88, 0x08,
        0xD6, 0x92, 0x46, 0x1C, 0x84, 0xEB, 0x5D, 0x07, 0xC7, 0x95, 0xD3, 0xB0, 0x37, 0x29, 0x0A, 0xC7,
        0xC5, 0xA9, 0xFD, 0x27, 0x75, 0xA8, 0x6E, 0xAD, 0x62, 0x8F, 0x54, 0x5F, 0x6E, 0x51, 0x93, 0x14,
        0x5E, 0xD2, 0x2B, 0x3B, 0xCD, 0xE1, 0x6F, 0xD3, 0xCC, 0xEE, 0xA8, 0x0A, 0x5F, 0xD9, 0x0C, 0xF8,
        0xFD, 0x32, 0x0C, 0x1D, 0x06, 0x4C, 0x88, 0x81, 0xBF, 0x36, 0x9F, 0x0D, 0x82, 0xEE, 0x0E, 0x63,
        0x7C, 0x43, 0x4E, 0xC6, 0xCA, 0x42, 0x21, 0xFE, 0x09, 0x52, 0xC2, 0x8A, 0x7E, 0x93, 0x09, 0x56,
        0xDC, 0x2B, 0x99, 0x08, 0x17, 0xBC, 0xC2, 0x34, 0x9E, 0xC4, 0x33, 0x9C, 0xDD, 0x09, 0xE2, 0xAB,
        0xB9, 0x4D, 0xC4, 0x4C, 0x17, 0x1A, 0x1E, 0x70, 0xE2, 0xCC, 0x55, 0x38, 0xB9, 0x68, 0x6A, 0x1E,
        0x4A, 0xFF, 0x90, 0x74, 0x36, 0x37, 0x8F, 0xE2, 0x91, 0x5F, 0x21, 0x7E, 0xC7, 0xC3, 0xBA, 0x69,
        0xE4, 0x7C, 0x91, 0x37, 0x94, 0xFF, 0xE8, 0x28, 0x5D, 0xD3, 0x99, 0xD3, 0xE3, 0x91, 0x54, 0xCE,
        0x51, 0xBA, 0x0C, 0x74, 0x66, 0x3B, 0xD6, 0x85, 0x63, 0x46, 0x97, 0xD7, 0x6E, 0xAB, 0x88, 0x90,
        0xCF, 0x77, 0xE3, 0x71, 0xBA, 0x7E, 0x5C, 0xD5, 0xFA, 0x78, 0xFA, 0xC7, 0xD5, 0x8A, 0x38, 0x43,
        0xC9, 0x93, 0x33, 0x1C, 0x8A, 0xFC, 0x5A, 0xBD, 0xCD, 0x17, 0xFC, 0x42, 0xB7, 0xC2, 0x8A, 0x19,
        0x6C, 0x2F, 0xB0, 0xEF, 0x03, 0xFE, 0x84, 0xCA, 0xF3, 0xFD, 0x62, 0x6A, 0x58, 0x4D, 0x94, 0x06,
        0xBC, 0x6F, 0xC5, 0xDC, 0x20, 0xDD, 0x0E, 0x19, 0xD1, 0xD0, 0x8C, 0x96, 0xD9, 0x06, 0x5F, 0x37,
        0x6E, 0x05, 0x26, 0x39, 0xFF, 0xC0, 0xF6, 0x1C, 0xCC, 0xE8, 0x4C, 0xDC, 0x83, 0x3F, 0x31, 0xB9,
        0xA6, 0xC8, 0x30, 0xDE, 0x9F, 0x58, 0xB2, 0x57, 0xF5, 0xCB, 0xE5, 0x99, 0x1F, 0xCA, 0x51, 0x87,
        0x17, 0x52, 0xB6, 0x11, 0xAE, 0x3B, 0x21, 0xF5, 0xE1, 0xF1, 0xAE, 0x3C, 0xFA, 0xB4, 0x9B, 0xC6,
        0xF6, 0x72, 0x1C, 0x1C, 0x18, 0xB7, 0x4B, 0x11, 0x40, 0x0D, 0x02, 0x9E, 0x26, 0x8D,
    ];

    private static ReadOnlySpan<byte> MemeKeyPokedexAndSaveFile =>
    [
        0x4F, 0x39, 0x94, 0x14, 0x78, 0x24, 0xD4, 0xF9, 0xD9, 0xB3, 0xEE, 0xBD, 0xC2, 0xDA, 0x67, 0x77,
        0x58, 0x54, 0x13, 0xFA, 0x41, 0xD2, 0x23, 0x47, 0xA3, 0x59, 0x3E, 0x22, 0x46, 0x7E, 0x2F, 0x11,
        0x7B, 0x51, 0xED, 0xFE, 0xAE, 0x59, 0x77, 0xE1, 0x9A, 0xD8, 0x8E, 0xB1, 0xC6, 0x3A, 0xDB, 0x7E,
        0x9D, 0xED, 0xB7, 0xF5, 0xAE, 0xEF, 0xEC, 0xA5, 0xF7, 0x77, 0xC7, 0xF1, 0x25, 0x27, 0x72, 0x90,
        0x25, 0xC8, 0x2D, 0xC4, 0xA1, 0x2C, 0x8B, 0x34, 0x4E, 0xB4, 0x72, 0xB9, 0xF6, 0x8B, 0xFD, 0x99,
        0x99, 0x16, 0xF0, 0xD0, 0x34, 0x60, 0xFF, 0x1D, 0x3F, 0xDC, 0x5E, 0xF0, 0xF7, 0xA7, 0xF8, 0xFE,
    ];

    private static ReadOnlySpan<byte> MemeKeyGaOle =>
    [
        0x7C, 0x7F, 0x70, 0x41, 0x38, 0x06, 0xDF, 0xD1, 0xD4, 0xE8, 0xF5, 0x61, 0x0B, 0xE3, 0xCA, 0x70,
        0x52, 0x45, 0x59, 0x3C, 0x24, 0xAB, 0x31, 0x02, 0xD7, 0x76, 0x8D, 0x43, 0xB3, 0xD8, 0x73, 0xEE,
        0xB5, 0xBB, 0x6B, 0x18, 0x8F, 0xD4, 0xF3, 0x8F, 0x06, 0xEB, 0x06, 0xC1, 0xA2, 0x73, 0x69, 0xE9,
        0x82, 0x2D, 0x10, 0x09, 0x3D, 0xAD, 0x17, 0x69, 0x2E, 0xA2, 0xD7, 0x1B, 0xCB, 0x89, 0x41, 0xF8,
        0x83, 0xF3, 0xF0, 0xE2, 0x06, 0x89, 0x41, 0xF6, 0x5F, 0xB2, 0x69, 0x50, 0xB7, 0xE5, 0x4F, 0x59,
        0x90, 0xE1, 0x63, 0x80, 0x95, 0x94, 0x38, 0x1C, 0x99, 0xCF, 0x33, 0x30, 0xF0, 0x52, 0x45, 0x2C,
    ];

    private static ReadOnlySpan<byte> MemeKeyMagearnaEvent =>
    [
        0x9D, 0x74, 0x1C, 0xBA, 0x2A, 0xBA, 0x23, 0x40, 0x84, 0x61, 0xAC, 0x16, 0x8B, 0x32, 0x27, 0x19,
        0x9C, 0x15, 0xFF, 0xA2, 0x78, 0x46, 0x62, 0xFE, 0x16, 0x94, 0x59, 0xDD, 0xC2, 0x40, 0x9A, 0xE0,
        0x8F, 0xA3, 0x02, 0xA6, 0xE7, 0x02, 0x60, 0x51, 0xC8, 0x37, 0x8D, 0x09, 0x89, 0x85, 0x00, 0x02,
        0x80, 0x21, 0xFE, 0x21, 0xB1, 0xA8, 0x16, 0x5C, 0x99, 0x18, 0x77, 0x9B, 0xA1, 0x40, 0x59, 0x7E,
        0x03, 0xED, 0x3E, 0xAF, 0x2F, 0xD8, 0x2C, 0x02, 0x6B, 0x17, 0xE6, 0xBB, 0x0D, 0x1C, 0x4B, 0xC6,
        0xCE, 0x06, 0xE9, 0xFA, 0xC2, 0xE5, 0xDC, 0xDD, 0x40, 0x25, 0x98, 0x3D, 0xE5, 0x7C, 0x67, 0xCA,
    ];

    private static ReadOnlySpan<byte> MemeKeyMoncolleGet =>
    [
        0x99, 0x14, 0x94, 0x5B, 0x32, 0x80, 0x79, 0x6F, 0xF8, 0xEC, 0x69, 0x46, 0x81, 0xED, 0x22, 0x18,
        0xF8, 0xFC, 0xD1, 0xC6, 0x62, 0x8F, 0xCF, 0xAC, 0xD6, 0x33, 0xA8, 0x66, 0x22, 0xD2, 0x78, 0xC0,
        0x9F, 0xD1, 0xBA, 0x1B, 0x2E, 0x60, 0xAF, 0x28, 0x96, 0xED, 0xDA, 0xF7, 0x61, 0x10, 0xCA, 0x24,
        0x6A, 0xED, 0x9E, 0x08, 0xD7, 0xD9, 0x0F, 0x7F, 0x28, 0x57, 0x64, 0xBB, 0xD3, 0xE2, 0x0E, 0x05,
        0xA1, 0x1B, 0xA2, 0x14, 0xC9, 0x6B, 0x1A, 0x54, 0xE1, 0xA8, 0xD4, 0x8D, 0xE6, 0xEF, 0x06, 0x0C,
        0x79, 0x01, 0x1A, 0x4B, 0x33, 0x26, 0xFB, 0xE5, 0x5F, 0x29, 0xFD, 0xE4, 0x0B, 0x31, 0xF4, 0x70,
    ];

    private static ReadOnlySpan<byte> MemeKeyIslandScan =>
    [
        0x34, 0xB0, 0x84, 0x42, 0xE3, 0xD6, 0x8D, 0x37, 0x30, 0xCF, 0x5C, 0xEE, 0x9E, 0x82, 0xBC, 0xFD,
        0x5F, 0x66, 0x64, 0x16, 0x8F, 0x43, 0xE9, 0xF2, 0xEA, 0x26, 0xCC, 0x7B, 0x94, 0xB1, 0xF4, 0x4F,
        0xF7, 0xB3, 0xC0, 0xBA, 0xD5, 0xC3, 0x46, 0x69, 0x3D, 0xDA, 0xD5, 0x46, 0x1E, 0x60, 0x87, 0xAD,
        0x06, 0x10, 0x15, 0x74, 0x4F, 0x6D, 0xBA, 0x29, 0x4F, 0x9B, 0xCD, 0x6F, 0x0E, 0x7A, 0x35, 0x85,
        0x9F, 0x0A, 0x15, 0xF3, 0x58, 0xEB, 0x00, 0xBE, 0xD5, 0xA4, 0xC1, 0x88, 0x41, 0xA8, 0xB6, 0xA6,
        0x9D, 0x91, 0xFC, 0x60, 0x3E, 0x6D, 0xCE, 0x05, 0x8D, 0xD9, 0x69, 0x83, 0xC5, 0xDF, 0xBB, 0x04,
    ];

    private static ReadOnlySpan<byte> MemeKeyTvTokyo =>
    [
        0x19, 0x5B, 0x4E, 0xA9, 0xF4, 0x8E, 0x6A, 0xDB, 0xEE, 0x73, 0xEB, 0x0D, 0x52, 0x9C, 0x14, 0xED,
        0xC9, 0x9B, 0xB0, 0x11, 0xF2, 0x14, 0xE0, 0x81, 0x2E, 0x51, 0x98, 0xBE, 0x40, 0x73, 0x97, 0x83,
        0x64, 0x6F, 0xB8, 0xC7, 0x5A, 0xBF, 0xFD, 0x84, 0xAA, 0x11, 0xFB, 0x09, 0x5E, 0xFF, 0xF5, 0xE3,
        0x83, 0xF7, 0xF4, 0x5A, 0x56, 0xA9, 0x67, 0x80, 0xC7, 0x9E, 0xBA, 0xBB, 0x43, 0x0D, 0x86, 0x0F,
        0xA6, 0xCB, 0x3D, 0x0B, 0xFC, 0x16, 0x3C, 0x52, 0xED, 0xC5, 0xC1, 0x99, 0x96, 0x3D, 0x3E, 0x51,
        0x87, 0x58, 0xF9, 0x11, 0x56, 0x9E, 0x1C, 0x66, 0x7B, 0xF8, 0xA1, 0x56, 0x43, 0xA1, 0x9E, 0x2F,
    ];

    private static ReadOnlySpan<byte> MemeKeyCapPikachu =>
    [
        0xA9, 0x6E, 0x2D, 0x8D, 0x9B, 0x99, 0xDB, 0xFB, 0x93, 0x49, 0x39, 0xC0, 0x97, 0xE3, 0xAC, 0x10,
        0x1C, 0x7D, 0x48, 0xCE, 0xC5, 0x2F, 0xCA, 0x71, 0x7B, 0x14, 0xB1, 0x98, 0x90, 0x20, 0x85, 0x92,
        0x04, 0x5C, 0x43, 0x00, 0x35, 0xDD, 0x09, 0xA3, 0x14, 0x46, 0x14, 0x2E, 0x9E, 0xA3, 0x3C, 0xF3,
        0xE6, 0xB6, 0xE6, 0x94, 0x84, 0xB6, 0xD2, 0xEE, 0xD5, 0x00, 0xB8, 0x38, 0x90, 0x48, 0x01, 0x34,
        0x91, 0x60, 0x24, 0x03, 0xDB, 0xE7, 0xB8, 0x14, 0xEA, 0x06, 0x96, 0x67, 0xCF, 0xAD, 0xAF, 0xE7,
        0x48, 0x95, 0x21, 0x7D, 0x78, 0x03, 0x7B, 0x4A, 0x45, 0x6F, 0xAB, 0x2C, 0xAF, 0xD7, 0x1E, 0x69,
    ];
}
